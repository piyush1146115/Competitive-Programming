/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        queue<TreeNode*> Q;
        
        Q.push(root);
        Q.push(root);
        
        while(!Q.empty()){
            TreeNode* L = Q.front();
            Q.pop();
            TreeNode* R = Q.front();
            Q.pop();
            
            if(L == NULL && R == NULL){
                continue;
            }
            
            if(L == NULL || R == NULL)
                return false;
            
            if(L -> val != R -> val)
                return false;
            
            Q.push(L -> left);
            Q.push(R -> right);
            Q.push(L -> right);
            Q.push(R -> left);
        }
        
        return true;
    }
    
};